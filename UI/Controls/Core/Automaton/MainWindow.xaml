<core:BaseUserControlWithWindow
    x:Class="CryoFall.Automaton.UI.Controls.Core.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:AtomicTorch.CBND.CoreMod.UI.Controls.Core;assembly=core"
    xmlns:base="clr-namespace:AtomicTorch.GameEngine.Common.Client.MonoGame.UI;assembly=AtomicTorch.CBND.GameApi.WPF.Stubs"
    xmlns:data="clr-namespace:CryoFall.Automaton.UI.Controls.Core.Data"
    xmlns:loc="clr-namespace:AtomicTorch.CBND.CoreMod.UI;assembly=core"
    xmlns:helpers="clr-namespace:CryoFall.Automaton.UI.Controls.Core.Helpers">

    <base:BaseUserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UI/Styles/DefaultStyles.xaml" />
                <ResourceDictionary Source="/UI/Styles/RequiredStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontFamily" Value="{StaticResource CondensedFontFamily}" />
            </Style>

            <DataTemplate DataType="{x:Type data:ViewModelEntity}">
                <CheckBox IsChecked="{Binding IsEnabled}"
                          Margin="0,2,0,2">
                    <CheckBox.Content>
                        <StackPanel Orientation="Horizontal">
                            <Rectangle Fill="{Binding Icon}"
                                       Margin="2,0,2,0"
                                       Width="24"
                                       Height="24" />
                            <TextBlock Text="{Binding Name}" />
                        </StackPanel>
                    </CheckBox.Content>
                    <base:ToolTipServiceExtend.ToolTip>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding Name}"
                                       HorizontalAlignment="Center"
                                       FontWeight="Bold"
                                       FontSize="13"/>
                            <Rectangle Fill="{Binding Icon}"
                                       Width="128"
                                       Height="128"
                                       UseLayoutRounding="True" />
                        </StackPanel>
                    </base:ToolTipServiceExtend.ToolTip>
                </CheckBox>
            </DataTemplate>

            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="core:SoundUI.ClickSound" Value="{StaticResource SoundListElementClick}" />
                <Setter Property="core:SoundUI.EnterSound" Value="{StaticResource SoundListElementEnter}" />
                <Setter Property="Background" Value="{StaticResource BrushColorAlt1}" />
                <Setter Property="Foreground" Value="{StaticResource BrushColorAltLabelForeground}" />
                <Setter Property="BorderBrush" Value="{StaticResource BrushColorAlt3}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                            <Condition Binding="{Binding Path=IsEnabled}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="DarkGreen" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                            <Condition Binding="{Binding Path=IsEnabled}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="DarkRed" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            <Condition Binding="{Binding Path=IsEnabled}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#07750c" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                            <Condition Binding="{Binding Path=IsEnabled}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#09990f" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            <Condition Binding="{Binding Path=IsEnabled}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="IndianRed" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true" />
                            <Condition Binding="{Binding Path=IsEnabled}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="Red" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate DataType="{x:Type data:ViewModelFeature}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Text="{Binding Description}"
                               TextWrapping="Wrap"
                               Margin="10"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />

                    <ItemsControl Grid.Row="1"
                                  ItemsSource="{Binding EntityCollection}"
                                  HorizontalAlignment="Center">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="{x:Type ItemsControl}">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>

                    <Grid Grid.Row="2"
                          Margin="0,5,0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0"
                                HorizontalAlignment="Center"
                                Content="{x:Static data:AutomatonStrings.Button_SelectAll}"
                                Command="{Binding SelectAll}" />

                        <Button Grid.Column="1"
                                HorizontalAlignment="Center"
                                Content="{x:Static data:AutomatonStrings.Button_DeselectAll}"
                                Command="{Binding DeselectAll}" />
                    </Grid>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type data:ViewModelSettings}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Text="{Binding Description}"
                               TextWrapping="Wrap"
                               Margin="10"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />

                    <StackPanel Grid.Row="1"
                                Orientation="Vertical"
                                HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding UpdateIntervalText}"
                                       Margin="0,0,10,0"
                                       base:ToolTipServiceExtend.ToolTip="{Binding UpdateIntervalTooltip}" />
                            <TextBox Text="{Binding UpdateInterval}"
                                     Width="75" />
                        </StackPanel>
                    </StackPanel>

                    <Grid Grid.Row="2"
                          Margin="0,5,0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0"
                                HorizontalAlignment="Center"
                                Content="{x:Static loc:CoreStrings.Button_Apply}"
                                Command="{Binding Apply}" />

                        <Button Grid.Column="1"
                                HorizontalAlignment="Center"
                                Content="{x:Static loc:CoreStrings.Button_Cancel}"
                                Command="{Binding Cancel}" />
                    </Grid>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </base:BaseUserControl.Resources>

    <core:GameWindow x:Name="GameWindow"
                     Width="{StaticResource GameMenuStandardWindowWidth}"
                     Height="{StaticResource GameMenuStandardWindowHeight}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="15" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0"
                        Grid.ColumnSpan="4"
                        Grid.Row="0"
                        Visibility="{Binding Path=IsEnabled,
                                             Converter={StaticResource BoolToVisibilityConverter},
                                             ConverterParameter=Reverse}"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="0,5,0,5">
                <TextBlock Foreground="Red"
                           FontWeight="Bold"
                           Text="{x:Static data:AutomatonStrings.Text_ModDisabledPart1}"/>
                <core:LabelWithButton Margin="5,0,2,0">
                    <core:LabelWithButton.Button>
                        <helpers:AutomatonButtonReference Button="Toggle" />
                    </core:LabelWithButton.Button>
                </core:LabelWithButton>
                <TextBlock Foreground="Red"
                           FontWeight="Bold"
                           Text="{x:Static data:AutomatonStrings.Text_ModDisabledPart2}"/>
            </StackPanel>

            <ListBox Grid.Column="1"
                     Grid.Row="1"
                     ItemsSource="{Binding ListEntries}"
                     SelectedItem="{Binding SelectedListEntry}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <ScrollViewer Style="{StaticResource VerticalWideButtonScrollViewerStyle}"
                                      CanContentScroll="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"
                                   HorizontalAlignment="Center" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Control Grid.Row="1"
                     Style="{StaticResource ControlVerticalSeparatorLeft}" />
            <Control Grid.Row="1"
                     Style="{StaticResource ControlVerticalSeparatorRight}" />

            <Grid Grid.Column="3"
                  Grid.Row="1"
                  Visibility="{Binding SelectedListEntry,
                                       Converter={StaticResource NullToVisibilityConverter},
                                       ConverterParameter=Reverse}">
                <TextBlock Text="{x:Static data:AutomatonStrings.Text_NoFeatureSelected}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
            </Grid>

            <ContentControl Grid.Column="3"
                            Grid.Row="1"
                            Content="{Binding SelectedListEntry}"
                            Visibility="{Binding DataContext.SelectedFeature,
                                                 RelativeSource={RelativeSource AncestorType=Grid},
                                                 Converter={StaticResource NullToVisibilityConverter}}" />
        </Grid>
    </core:GameWindow>
</core:BaseUserControlWithWindow>